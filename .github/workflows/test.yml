name: Test

on:
  push:
    branches: [ main, uv, usac_velodata ]
  pull_request:
    branches: [ main, uv, usac_velodata ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/uv
          .venv
        key: ${{ runner.os }}-uv-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml', '**/pyproject.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-${{ matrix.python-version }}-
    
    - name: Install dependencies
      run: |
        uv venv
        uv pip install -e ".[dev]"
        uv pip install pytest-cov
    
    - name: Run linting
      run: |
        uv run ruff check src/
    
    - name: Run tests
      run: |
        uv run pytest --cov=src/usac_velodata tests/
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: false

  build-test:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/uv
          .venv
        key: ${{ runner.os }}-uv-3.11-${{ hashFiles('**/pyproject.toml', '**/pyproject.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-3.11-
    
    - name: Install build dependencies
      run: |
        uv venv
        uv pip install build twine
    
    - name: Build package
      run: |
        uv run python -m build
    
    - name: Check package
      run: |
        uv run twine check dist/* 